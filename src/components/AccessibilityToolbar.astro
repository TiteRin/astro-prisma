---
import { Icon } from "astro-icon/components";
const fonts = [
    {
        name: "Open Dyslexic",
        className: "font-opendyslexic"
    },
    {
        name: "Open Sans",
        className: "font-opensans"
    },
    {
        name: "Inter",
        className: "font-inter"
    }
]
---
<aside class="accessibility-widget">
    <button class="btn-action toggle-accessibility-widget">
        <Icon name="iconoir:accessibility" size="4rem"/>
    </button>
    <form action="" class="hidden">
        <h1>Outils d’accessibilité</h1>
        <fieldset>
            <label for="font">Choisissez une police</label>
            <select id="font">
                {
                    fonts.map(font => (
                            <option key={font.className} value={font.className}>{font.name}</option>
                    ))
                }
            </select>
        </fieldset>
        <fieldset>
            <button aria-label="Bouton moins, diminuer le zoom" class="zoom-less btn-action with-border" type="button">
                <Icon name="iconoir:minus"/>
            </button>
            <span aria-live="assertive">
            Zoom <span class="zoom-value" data-value="100">100%</span>
            </span>
            <button aria-label="Bouton plus, augmenter le zoom" class="zoom-more btn-action with-border" type="button">
                <Icon name="iconoir:plus"/>
            </button>
        </fieldset>
        <fieldset>
            <button aria-label="Reset" class="btn-action reset">Reset</button>
        </fieldset>
    </form>
</aside>

<script define:vars={{fonts}}>
    const selectFont = document.querySelector('#font');
    const body = document.querySelector('body');
    const allFonts = fonts.map((font) => font.className);
    const spanZoom = document.querySelector(".zoom-value");
    const btnZoomMinus = document.querySelector(".btn-action.zoom-less");
    const btnZoomPlus = document.querySelector(".btn-action.zoom-more");
    const btnReset = document.querySelector(".btn-action.reset");

    let zoom = 100;
    let font = "";

    function setFont(font) {
        body.classList.remove(...allFonts);
        body.classList.add(font);
        selectFont.value = font;
    }

    function setZoom(zoom) {
        spanZoom.innerHTML = `${zoom}%`;
        spanZoom.setAttribute("data-zoom", zoom);
        body.style.fontSize = `${zoom}%`;
    }

    selectFont?.addEventListener('change', () => {
        if (!body) {
            return;
        }
        const value = selectFont.options[selectFont.selectedIndex].value;
        setFont(value);

        // store in local storage
        localStorage.setItem("font", value);
    });

    btnZoomMinus.addEventListener('click', () => {
        setZoom(zoom-= 10);
        localStorage.setItem("zoom", zoom);
    });

    btnZoomPlus.addEventListener('click', () => {
        setZoom(zoom+= 10);
        localStorage.setItem("zoom", zoom);
    });

    btnReset.addEventListener("click", () => {
        localStorage.removeItem("zoom");
        localStorage.removeItem("font");
        setZoom(100);
        setFont(fonts[0].className);
    });

    // load from local storage
    font = localStorage.getItem("font");
    zoom = localStorage.getItem("zoom") || 100;

    if (font) {
        setFont(font);
    }

    if (zoom) {
        setZoom(zoom);
    }
</script>

<style>
    .accessibility-widget {

        position: sticky;
        bottom: 2rem;

        @media print {
            display: none;
        }

        .toggle-accessibility-widget {
            float: right;
            border-radius: 36px;
            display: flex;

            opacity: 30%;
            transition: opacity 300ms;

            &:hover, &:active {
                opacity: 100%;
            }
        }

        form, fieldset {
            display: flex;
            flex-direction: row;
            gap: 1rem;
            align-items: center;
            border: 0;
        }

        form {
            h1 {
                margin: 0;
                font-size: 1rem;
            }
        }
    }
</style>