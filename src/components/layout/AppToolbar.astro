---
import { PersonStanding, User } from '@lucide/astro';

import FontSelector from "../features/accessibility/FontSelector.astro";
import ZoomControls from "../features/accessibility/ZoomControls.astro";
import ThemeSwitcher from "../features/accessibility/ThemeSwitcher.astro";
---

<header 
    class:list={[
        "app-toolbar sticky top-0 flex items-center gap-2 p-2", // layout styles
        "bg-base-200 border-b border-base-300", // visual styles
        "z-50", // z-index
    ]}
    role="banner"
>
    <div class:list={[
        "app-toolbar__brand flex items-center min-w-0 flex-grow", // layout styles
    ]}>
        <a 
            href="/" 
            class:list={[
                "app-toolbar__home-link flex flex-col items-baseline gap-1 min-w-0", // layout styles
                "font-medium rounded-sm text-decoration-none", // text styles
                "outline-none focus-visible:outline-primary-content", // focus styles
            ]}
            aria-label="Retour à l'accueil"
        >
            <h1 class:list={[
                "app-toolbar__app-name m-0", // layout styles
                "text-primary text-2xl font-bold", // text styles
            ]}>Prisma</h1>
            <span class:list={[
                "app-toolbar__app-subtitle m-0 pl-2", // layout styles
                "text-sm font-normal text-neutral", // text styles
            ]}>Pôle recherche</span>
        </a>
    </div>

    <button 
        class:list={[
            "app-toolbar__menu-toggle btn btn-circle btn-outline", // button styles
            "md:hidden", // responsive styles
        ]}
        aria-label="Menu d'accessibilité" 
        aria-expanded="false" 
        aria-controls="accessibility-menu"
        aria-haspopup="true"
    >
        <PersonStanding />
    </button>

    <div 
        id="accessibility-menu" 
        class:list={[
            "app-toolbar__accessibility items-center gap-4 flex p-2", // layout styles
            "bg-base-200 border-b border-base-300", // visual styles
            "hidden absolute top-full left-0 w-full flex-col", // mobile styles
            "md:flex md:w-auto md:relative md:flex-row md:border-none", // desktop styles
        ]}
        role="menu"
        aria-label="Options d'accessibilité"
    >
        <FontSelector />
        <ZoomControls />
        <ThemeSwitcher />
    </div>

    <div class:list={[
        "app-toolbar__user", // layout styles
    ]}>
        <button 
            class:list={[
                "app-toolbar__avatar avatar btn btn-circle btn-outline", // button styles
            ]}
            aria-label="Menu utilisateur"
            aria-haspopup="true"
        >
            <User />
        </button>
    </div>
</header>

<script>
    const menuToggle = document.querySelector<HTMLButtonElement>('.app-toolbar__menu-toggle');
    const accessibilityMenu = document.querySelector<HTMLDivElement>('#accessibility-menu');

    if (menuToggle && accessibilityMenu) {
        // Handle menu toggle
        menuToggle.addEventListener('click', () => {
            const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
            menuToggle.setAttribute('aria-expanded', (!isExpanded).toString());
            accessibilityMenu.classList.toggle('hidden', !isExpanded);
        });

        // Handle keyboard navigation
        menuToggle.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                menuToggle.click();
            }
        });

        // Close menu on escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !accessibilityMenu.hidden) {
                menuToggle.setAttribute('aria-expanded', 'false');
                accessibilityMenu.hidden = true;
                menuToggle.focus();
            }
        });

        // Trap focus within the menu when open
        accessibilityMenu.addEventListener('keydown', (e) => {
            if (e.key === 'Tab') {
                const focusableElements = accessibilityMenu.querySelectorAll(
                    'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
                );
                const firstFocusable = focusableElements[0] as HTMLElement;
                const lastFocusable = focusableElements[focusableElements.length - 1] as HTMLElement;

                if (e.shiftKey) {
                    if (document.activeElement === firstFocusable) {
                        e.preventDefault();
                        lastFocusable.focus();
                    }
                } else {
                    if (document.activeElement === lastFocusable) {
                        e.preventDefault();
                        firstFocusable.focus();
                    }
                }
            }
        });
    }
</script>

<style>
    /* Styles pour les dropdowns en version mobile */
    @media (max-width: 768px) {
        .dropdown-content {
            position: fixed !important;
            top: 0 !important;
            left: 0 !important;
            width: 100vw !important;
            height: 100vh !important;
            max-height: 100vh !important;
            margin: 0 !important;
            border-radius: 0 !important;
            padding: 1rem !important;
            z-index: 100 !important;
        }

        /* Ajout d'un header pour les dropdowns en mobile */
        .dropdown-content::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4rem;
            background: hsl(var(--b2));
            border-bottom: 1px solid hsl(var(--b3));
            z-index: -1;
        }
    }
</style>
