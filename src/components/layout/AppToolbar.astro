---
import { Icon } from "astro-icon/components";
import "../../styles/layout/app-toolbar.scss";
import "../../styles/features/accessibility/zoom-controls.scss";
import "../../styles/features/accessibility/theme-switcher.scss";
import FontSelector from "../features/accessibility/FontSelector.astro";
import ZoomControls from "../features/accessibility/ZoomControls.astro";
import ThemeSwitcher from "../features/accessibility/ThemeSwitcher.astro";
---

<header class="app-toolbar">
    <div class="app-toolbar__brand">
        <a href="/" class="app-toolbar__home-link">
            <h1 class="app-toolbar__app-name">Prisma</h1>
            <span class="app-toolbar__app-subtitle">PÃ´le recherche</span>
        </a>
    </div>

    <button class="app-toolbar__menu-toggle" aria-label="Toggle accessibility menu" aria-expanded="false" aria-controls="accessibility-menu">
        <Icon name="iconoir:accessibility" />
    </button>

    <div id="accessibility-menu" class="app-toolbar__accessibility" hidden>
        <FontSelector />
        <ZoomControls />
        <ThemeSwitcher />
    </div>

    <div class="app-toolbar__user">
        <button class="app-toolbar__avatar" aria-label="User menu">
            <Icon name="iconoir:user" />
        </button>
    </div>
</header>

<script>
    const menuToggle = document.querySelector<HTMLButtonElement>('.app-toolbar__menu-toggle');
    const accessibilityMenu = document.querySelector<HTMLDivElement>('#accessibility-menu');

    if (menuToggle && accessibilityMenu) {
        menuToggle.addEventListener('click', () => {
            const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
            menuToggle.setAttribute('aria-expanded', String(!isExpanded));
            accessibilityMenu.hidden = isExpanded;
        });

        // Close menu when clicking outside
        document.addEventListener('click', (e) => {
            const target = e.target as Node;
            if (menuToggle && accessibilityMenu && 
                !menuToggle.contains(target) && 
                !accessibilityMenu.contains(target) && 
                !accessibilityMenu.hidden) {
                menuToggle.setAttribute('aria-expanded', 'false');
                accessibilityMenu.hidden = true;
            }
        });

        // Close menu on escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !accessibilityMenu.hidden) {
                menuToggle.setAttribute('aria-expanded', 'false');
                accessibilityMenu.hidden = true;
            }
        });
    }
</script>
