---
import FicheLayout from "../../layouts/FicheLayout.astro";
import {getCollection} from "astro:content";
import type { CollectionEntry } from "astro:content";
import {pluralize} from "../../utils/functions";

export async function getStaticPaths() {

    const allReadingNotes:CollectionEntry<"readingNotes">[] = await getCollection("readingNotes");
    const uniqueAuthors = [...new Set(allReadingNotes.map(readingNote => readingNote.data.contributor).flat())];

    return uniqueAuthors.map((contributor) => {

        const filteredReadingNotes = allReadingNotes.filter(readingNote => readingNote.data.contributor === contributor)

        return {
            params: {contributor},
            props: {
                filteredReadingNotes
            }
        }
    })
}

const {filteredReadingNotes} = Astro.props;
const {contributor} = Astro.params;
---
<FicheLayout pageTitle={`Navigation par bénévole - ${contributor}`}>
    <div class="prose max-w-none">
        <h1 class="text-2xl font-bold mb-6">
            {`${filteredReadingNotes.length} ${pluralize(filteredReadingNotes.length, "fiche")} ${pluralize(filteredReadingNotes.length, "rédigée")}`} par {contributor}
        </h1>
        <ul class="menu menu-lg bg-base-200 rounded-box">
            {
                filteredReadingNotes.map(readingNote => (
                    <li>
                        <a 
                            href={`/fiches/${readingNote.id}`}
                            class="flex flex-col gap-1 hover:bg-base-300"
                        >
                            <span class="font-medium">{readingNote.data.bookTitle}</span>
                            <span class="text-sm opacity-70">
                                {readingNote.data.bookAuthors.join(", ")}
                            </span>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</FicheLayout>
